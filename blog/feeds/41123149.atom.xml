<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>網際內容管理系統 - 41123149</title><link href="./" rel="alternate"></link><link href="./feeds/41123149.atom.xml" rel="self"></link><id>./</id><updated>2024-05-24T04:42:54+08:00</updated><entry><title>W13</title><link href="./W13%2041123149.html" rel="alternate"></link><published>2024-05-17T15:00:00+08:00</published><updated>2024-05-24T04:42:54+08:00</updated><author><name>41123149</name></author><id>tag:None,2024-05-17:./W13 41123149.html</id><summary type="html">&lt;p&gt;2024/05/17 上課內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024/05/17 上課內容&lt;/p&gt;


&lt;h1&gt;W13分組任務&lt;/h1&gt;
&lt;p&gt;實習任務三: &lt;/p&gt;
&lt;p&gt;足球機器人網際場景模擬&lt;/p&gt;
&lt;p&gt;遇到問題:無法進行連線，目前只能單人遊玩，還在嘗試處理。&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/GGTcWy23-kQ?si=dc5Q3Hh3ctmV-_TA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;</content><category term="41123149"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>W12</title><link href="./W12%2041123149.html" rel="alternate"></link><published>2024-05-10T15:00:00+08:00</published><updated>2024-05-24T04:42:54+08:00</updated><author><name>41123149</name></author><id>tag:None,2024-05-10:./W12 41123149.html</id><summary type="html">&lt;p&gt;2024/05/10 上課內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024/05/10 上課內容&lt;/p&gt;


&lt;h1&gt;W12分組任務&lt;/h1&gt;
&lt;p&gt;實習任務二: &lt;/p&gt;
&lt;p&gt;將分組倉儲設為評分倉儲的子模組&lt;/p&gt;</content><category term="41123149"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>W11</title><link href="./W11%2041123149.html" rel="alternate"></link><published>2024-05-03T15:00:00+08:00</published><updated>2024-05-24T04:42:54+08:00</updated><author><name>41123149</name></author><id>tag:None,2024-05-03:./W11 41123149.html</id><summary type="html">&lt;p&gt;2024/05/03 上課內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024/05/03 上課內容&lt;/p&gt;


&lt;h1&gt;W11分組任務&lt;/h1&gt;
&lt;p&gt;將個人心得上傳至各組專案上&lt;/p&gt;
&lt;p&gt;心得:&lt;/p&gt;
&lt;p&gt;這門協同產品設計課程讓我學會了如何使用 github 來更新blog，並使用Replit、Codespaces去維護個人或分組網站，雖然學得不是很深，但我還是持續努力完成每周的分組作業。&lt;/p&gt;
&lt;p&gt;連結&lt;a href="https://mdecd2024.github.io/2astud-2asite/content/g3.html"&gt;g3&lt;/a&gt;&lt;/p&gt;</content><category term="41123149"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>W10</title><link href="./W10%2041123149.html" rel="alternate"></link><published>2024-04-26T15:00:00+08:00</published><updated>2024-05-24T04:42:54+08:00</updated><author><name>41123149</name></author><id>tag:None,2024-04-26:./W10 41123149.html</id><summary type="html">&lt;p&gt;2024/04/26 上課內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024/04/26 上課內容&lt;/p&gt;


&lt;h1&gt;W10分組任務&lt;/h1&gt;
&lt;p&gt;任務一:&lt;/p&gt;
&lt;p&gt;建立2a各學員的倉儲、網站與分組連結&lt;/p&gt;
&lt;p&gt;以下為各學員的倉儲程式&lt;/p&gt;
&lt;pre class="brush: python"&gt;

  from browser import window, ajax, document, html

  def fetch_csv_data():
    # CSV 檔案網址
    url = "https://mdecd2024.github.io/2astud-2asite/downloads/2a.txt"

    def on_complete(req):
      if req.status == 200 or req.status == 0:
        # 讀取 CSV 檔案內容
        content = req.text

        # 依照換行符號拆分資料
        lines = content.split('\n')

        # 建立空列表儲存資料
        data = []

        # 遍歷每一行資料
        for line in lines:
          # 忽略空白行
          if line.strip() == "":
            continue

          # 依照逗號拆分資料
          items = line.split(',')

          # 將拆分後的資料加入列表
          data.append(items)

        # 必須去除 data 的第一列標題資料, 只取序號為 1 之後的資料
        data = data[1:]

        # 取得 html 可以插入的標註位置
        brython_div = document["brython_div1"]
        course_title = "cd2024"

        # 逐一處理學員資料
        index = 0
        for items in data:
          index += 1
          student_id, github_username, group = items

          if github_username == "":
            github_username = "000"

          # 建立網站和倉儲連結，使用正確的模板
          site_url = f"https://{github_username}.github.io/{course_title}"
          repo_url = f"https://github.com/{github_username}/{course_title}"
          group_site_url = f"https://mdecd2024.github.io/2a-midag{group}"
          group_repo_url = f"https://github.com/mdecd2024/2a-midag{group}"

          # 添加學號, 網站, 倉儲連結和序號到 brython_div
          brython_div &lt;= str(index) + ". " + html.A(student_id, href=site_url)
          brython_div &lt;= " ("
          brython_div &lt;= html.A("repo", href=repo_url)
          brython_div &lt;= ") | " 
          brython_div &lt;= html.A("Group Site", href=group_site_url)
          brython_div &lt;= " | "
          brython_div &lt;= html.A("Group Repo", href=group_repo_url)
          brython_div &lt;= html.BR()

      else:
        print("Error:", req.text)

    # 發送 AJAX 請求
    req = ajax.ajax()
    req.bind('complete', on_complete)
    req.open('GET', url, True)
    req.set_header('content-type', 'application/x-www-form-urlencoded')
    req.send()

  # 呼叫函式讀取 CSV 資料
  fetch_csv_data()

&lt;/pre&gt;

&lt;p&gt;任務二:&lt;/p&gt;
&lt;p&gt;粗略閱讀過後，雖然用了英文軟體翻譯，但還是讓我深深地感受到英文能力的不足，主要內容為實驗數據及相關資料來源，並探討自動控制理論在穩定動態系統時的局限性。&lt;/p&gt;
&lt;p&gt;任務三:&lt;/p&gt;
&lt;p&gt;鋼球平衡台零組件繪圖&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mdecd2024.github.io/2a-midag3/blog/W10.html"&gt;小組檔案連結及影片&lt;/a&gt;&lt;/p&gt;</content><category term="41123149"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>W9</title><link href="./W9%2041123149.html" rel="alternate"></link><published>2024-04-19T15:00:00+08:00</published><updated>2024-05-24T04:42:54+08:00</updated><author><name>41123149</name></author><id>tag:None,2024-04-19:./W9 41123149.html</id><summary type="html">&lt;p&gt;2024/04/19 上課內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024/04/19 上課內容&lt;/p&gt;


&lt;h1&gt;W9分組任務&lt;/h1&gt;
&lt;p&gt;填寫期中自評，並做該做的事。&lt;/p&gt;</content><category term="41123149"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>W8</title><link href="./W8%2041123149.html" rel="alternate"></link><published>2024-04-12T15:00:00+08:00</published><updated>2024-05-24T04:42:54+08:00</updated><author><name>41123149</name></author><id>tag:None,2024-04-12:./W8 41123149.html</id><summary type="html">&lt;p&gt;2024/04/12 上課內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024/04/12 上課內容&lt;/p&gt;


&lt;h1&gt;W8分組任務&lt;/h1&gt;
&lt;p&gt;分組網站內容的協同&lt;/p&gt;</content><category term="41123149"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>W7</title><link href="./W7%2041123149.html" rel="alternate"></link><published>2024-04-05T15:00:00+08:00</published><updated>2024-05-24T04:42:54+08:00</updated><author><name>41123149</name></author><id>tag:None,2024-04-05:./W7 41123149.html</id><summary type="html">&lt;p&gt;2024/04/05 上課內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024/04/05 上課內容&lt;/p&gt;


&lt;h1&gt;W7清明連假&lt;/h1&gt;</content><category term="41123149"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>W6</title><link href="./W6%2041123149.html" rel="alternate"></link><published>2024-03-29T15:00:00+08:00</published><updated>2024-05-24T04:42:54+08:00</updated><author><name>41123149</name></author><id>tag:None,2024-03-29:./W6 41123149.html</id><summary type="html">&lt;p&gt;2024/03/22 上課內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024/03/22 上課內容&lt;/p&gt;


&lt;h1&gt;W6分組任務&lt;/h1&gt;
&lt;p&gt;在README新增能把子模組更新到最新的狀態的指令&lt;/p&gt;
&lt;p&gt;以下為程式&lt;/p&gt;
&lt;pre class="brush: python"&gt;

  git submodule update --init
  cd  學號(41123149)
  git pull origin main
  cd ..

&lt;/pre&gt;</content><category term="41123149"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>W5</title><link href="./W5%2041123149.html" rel="alternate"></link><published>2024-03-22T15:00:00+08:00</published><updated>2024-05-24T04:42:54+08:00</updated><author><name>41123149</name></author><id>tag:None,2024-03-22:./W5 41123149.html</id><summary type="html">&lt;p&gt;2024/03/22 上課內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024/03/22 上課內容&lt;/p&gt;


&lt;h1&gt;W5分組任務&lt;/h1&gt;
&lt;p&gt;將教學影片分組整理和自評 
並放在小組團隊的blog上&lt;/p&gt;
&lt;p&gt;第三組&lt;a href="https://mdecd2024.github.io/2a-midag3/blog/W4.html"&gt;小組blog&lt;/a&gt;&lt;/p&gt;</content><category term="41123149"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>W4</title><link href="./W4%2041123149.html" rel="alternate"></link><published>2024-03-15T15:00:00+08:00</published><updated>2024-05-24T04:42:54+08:00</updated><author><name>41123149</name></author><id>tag:None,2024-03-15:./W4 41123149.html</id><summary type="html">&lt;p&gt;2024/03/15 上課內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024/03/15 上課內容&lt;/p&gt;


&lt;h1&gt;W4分組任務&lt;/h1&gt;
&lt;p&gt;將"cd2024_2a_w2_3_如何建立各組的 Team midag1 並利用 Codespaces 維護內容"上字幕、逐字稿和大綱&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nfuedu-my.sharepoint.com/:f:/g/personal/41123149_nfu_edu_tw/EpBuGN3U99VEorrRqQrR6i0BNTp_hXlkuc7GbM0dt34z2A?e=GxOgJH"&gt;檔案&lt;/a&gt;&lt;/p&gt;</content><category term="41123149"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>W3</title><link href="./W3%2041123149.html" rel="alternate"></link><published>2024-03-08T15:00:00+08:00</published><updated>2024-05-24T04:42:54+08:00</updated><author><name>41123149</name></author><id>tag:None,2024-03-08:./W3 41123149.html</id><summary type="html">&lt;p&gt;2024/03/08 上課內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024/03/08 上課內容&lt;/p&gt;


&lt;h1&gt;W3分組任務&lt;/h1&gt;
&lt;p&gt;將組員的個人倉儲設為分組倉儲子模組&lt;/p&gt;
&lt;p&gt;翻譯 ODOO PLM 在協同產品設計上的應用 P1~P11&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nfuedu-my.sharepoint.com/:t:/g/personal/41123149_nfu_edu_tw/EcLFIfzF0w9HjdJnrAK1XtoBLYqpfa5VbfmAoVdFregKWA?e=y6yF9x"&gt;連結&lt;/a&gt;&lt;/p&gt;</content><category term="41123149"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>W2</title><link href="./W2%2041123149.html" rel="alternate"></link><published>2024-03-01T15:00:00+08:00</published><updated>2024-05-24T04:42:54+08:00</updated><author><name>41123149</name></author><id>tag:None,2024-03-01:./W2 41123149.html</id><summary type="html">&lt;p&gt;2024/03/01 上課內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024/03/01 上課內容&lt;/p&gt;


&lt;h1&gt;W2分組任務&lt;/h1&gt;
&lt;p&gt;加入小組並維護網站
第三組 &lt;a href="https://github.com/mdecd2024/2a-midag3.git"&gt;倉儲連結&lt;/a&gt;&lt;/p&gt;</content><category term="41123149"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>W1</title><link href="./W1%2041123149.html" rel="alternate"></link><published>2024-02-23T15:00:00+08:00</published><updated>2024-05-24T04:42:54+08:00</updated><author><name>41123149</name></author><id>tag:None,2024-02-23:./W1 41123149.html</id><summary type="html">&lt;p&gt;2024/02/23 上課內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024/02/23 上課內容&lt;/p&gt;


&lt;h1&gt;加入課程teams&lt;/h1&gt;
&lt;p&gt;課程代碼:p0961sy&lt;/p&gt;
&lt;h1&gt;建立倉儲 cd2024&lt;/h1&gt;
&lt;p&gt;41123149 &lt;a href="https://github.com/HSIAOYU-SEN/cd2024"&gt;倉儲連結&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;建立cd2024網站&lt;/h1&gt;
&lt;p&gt;41123149 &lt;a href="https://hsiaoyu-sen.github.io/cd2024/"&gt;網站連結&lt;/a&gt;&lt;/p&gt;</content><category term="41123149"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>2024 Spring 課程</title><link href="./W0%2041123149.html" rel="alternate"></link><published>2024-02-18T11:00:00+08:00</published><updated>2024-05-24T04:42:54+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-02-18:./W0 41123149.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;p&gt;使用者可以自行利用 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; 倉儲作為 Template, 建立自己的網站內容管理系統.&lt;/p&gt;
&lt;p&gt;引用網站網址連結的方法:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 在文章中多次引用同一個網站連結時, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 也可以使用 Markdown 的標準網站連結使用格式.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 引用 Python 程式的方法
for i in range(10):
    print(i, "列出字串")
&lt;/pre&gt;

&lt;p&gt;也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼.&lt;/p&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="41123149"></category><category term="網誌編寫"></category><category term="pelican"></category></entry></feed>